{
  "version": 3,
  "sources": ["../../../app/routes/student.leaderboard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\student.leaderboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\student.leaderboard.tsx\");\n  import.meta.hot.lastModified = \"1757747485374.1592\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport { TrophyIcon, StarIcon, AcademicCapIcon, ArrowLeftIcon, FireIcon, ArrowUpIcon, ArrowDownIcon } from \"@heroicons/react/24/outline\";\nexport const meta = () => {\n  return [{\n    title: \"Leaderboard - Student Dashboard\"\n  }, {\n    name: \"description\",\n    content: \"View your ranking and achievements compared to other students\"\n  }];\n};\n\n// Mock data - replace with actual data from your backend\nconst mockLeaderboard = [{\n  rank: 1,\n  studentName: \"Alice Johnson\",\n  studentId: \"STU2025002\",\n  class: \"12th A\",\n  totalPoints: 2850,\n  gpa: 4.0,\n  achievements: 15,\n  streak: 45,\n  trend: \"up\",\n  avatar: \"AJ\",\n  specialBadges: [\"Top Performer\", \"Consistent Achiever\", \"Academic Star\"]\n}, {\n  rank: 2,\n  studentName: \"Bob Smith\",\n  studentId: \"STU2025005\",\n  class: \"12th B\",\n  totalPoints: 2720,\n  gpa: 3.9,\n  achievements: 12,\n  streak: 32,\n  trend: \"up\",\n  avatar: \"BS\",\n  specialBadges: [\"Science Champion\", \"Problem Solver\"]\n}, {\n  rank: 3,\n  studentName: \"Carol Davis\",\n  studentId: \"STU2025008\",\n  class: \"12th A\",\n  totalPoints: 2680,\n  gpa: 3.8,\n  achievements: 14,\n  streak: 28,\n  trend: \"stable\",\n  avatar: \"CD\",\n  specialBadges: [\"Creative Thinker\", \"Team Player\"]\n}, {\n  rank: 4,\n  studentName: \"David Wilson\",\n  studentId: \"STU2025012\",\n  class: \"12th C\",\n  totalPoints: 2550,\n  gpa: 3.7,\n  achievements: 10,\n  streak: 21,\n  trend: \"down\",\n  avatar: \"DW\",\n  specialBadges: [\"Math Wizard\"]\n}, {\n  rank: 5,\n  studentName: \"Eva Brown\",\n  studentId: \"STU2025015\",\n  class: \"12th B\",\n  totalPoints: 2480,\n  gpa: 3.6,\n  achievements: 11,\n  streak: 19,\n  trend: \"up\",\n  avatar: \"EB\",\n  specialBadges: [\"Literature Expert\", \"Debate Champion\"]\n}, {\n  rank: 15,\n  studentName: \"John Doe\",\n  // Current user\n  studentId: \"STU2025001\",\n  class: \"12th A\",\n  totalPoints: 2150,\n  gpa: 3.2,\n  achievements: 8,\n  streak: 12,\n  trend: \"up\",\n  avatar: \"JD\",\n  specialBadges: [\"Rising Star\"],\n  isCurrentUser: true\n}];\nconst mockSubjectLeaderboards = [{\n  subject: \"Mathematics\",\n  leaders: [{\n    name: \"Alice Johnson\",\n    score: 98,\n    class: \"12th A\"\n  }, {\n    name: \"David Wilson\",\n    score: 96,\n    class: \"12th C\"\n  }, {\n    name: \"Bob Smith\",\n    score: 94,\n    class: \"12th B\"\n  }]\n}, {\n  subject: \"Physics\",\n  leaders: [{\n    name: \"Bob Smith\",\n    score: 97,\n    class: \"12th B\"\n  }, {\n    name: \"Alice Johnson\",\n    score: 95,\n    class: \"12th A\"\n  }, {\n    name: \"Carol Davis\",\n    score: 93,\n    class: \"12th A\"\n  }]\n}, {\n  subject: \"Chemistry\",\n  leaders: [{\n    name: \"Carol Davis\",\n    score: 96,\n    class: \"12th A\"\n  }, {\n    name: \"Eva Brown\",\n    score: 94,\n    class: \"12th B\"\n  }, {\n    name: \"Alice Johnson\",\n    score: 92,\n    class: \"12th A\"\n  }]\n}];\nconst mockAchievements = [{\n  id: 1,\n  title: \"Perfect Attendance\",\n  description: \"100% attendance for the semester\",\n  icon: \"\uD83C\uDFAF\",\n  rarity: \"rare\",\n  pointsAwarded: 500,\n  recipients: 23\n}, {\n  id: 2,\n  title: \"Academic Excellence\",\n  description: \"GPA above 3.8 for consecutive semesters\",\n  icon: \"\u2B50\",\n  rarity: \"legendary\",\n  pointsAwarded: 1000,\n  recipients: 8\n}, {\n  id: 3,\n  title: \"Problem Solver\",\n  description: \"Solved 100+ math problems this month\",\n  icon: \"\uD83E\uDDEE\",\n  rarity: \"common\",\n  pointsAwarded: 200,\n  recipients: 156\n}, {\n  id: 4,\n  title: \"Team Leader\",\n  description: \"Successfully led 5+ group projects\",\n  icon: \"\uD83D\uDC65\",\n  rarity: \"uncommon\",\n  pointsAwarded: 350,\n  recipients: 45\n}];\nexport default function StudentLeaderboard() {\n  _s();\n  const [viewType, setViewType] = useState(\"overall\");\n  const [timeframe, setTimeframe] = useState(\"semester\");\n  const currentUser = mockLeaderboard.find(student => student.isCurrentUser);\n  const topStudents = mockLeaderboard.filter(student => !student.isCurrentUser).slice(0, 10);\n  const getRankColor = rank => {\n    if (rank === 1) return 'text-yellow-600';\n    if (rank === 2) return 'text-gray-500';\n    if (rank === 3) return 'text-amber-600';\n    return 'text-gray-700';\n  };\n  const getRankIcon = rank => {\n    if (rank === 1) return <TrophyIcon className=\"h-6 w-6 text-yellow-600\" />;\n    if (rank === 2) return <StarIcon className=\"h-6 w-6 text-gray-500\" />;\n    if (rank === 3) return <StarIcon className=\"h-6 w-6 text-amber-600\" />;\n    return <span className=\"text-lg font-bold text-gray-700\">#{rank}</span>;\n  };\n  const getTrendIcon = trend => {\n    if (trend === 'up') return <ArrowUpIcon className=\"h-4 w-4 text-green-500\" />;\n    if (trend === 'down') return <ArrowDownIcon className=\"h-4 w-4 text-red-500\" />;\n    return <div className=\"h-4 w-4\" />;\n  };\n  const getBadgeColor = rarity => {\n    switch (rarity) {\n      case 'legendary':\n        return 'bg-purple-100 text-purple-800 border-purple-300';\n      case 'rare':\n        return 'bg-blue-100 text-blue-800 border-blue-300';\n      case 'uncommon':\n        return 'bg-green-100 text-green-800 border-green-300';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-300';\n    }\n  };\n  return <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Link to=\"/student/dashboard\" className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors\">\r\n            <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\r\n            Back to Dashboard\r\n          </Link>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900\">Leaderboard</h1>\r\n            <p className=\"text-gray-600\">Track your ranking and achievements</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Current User Stats */}\r\n      {currentUser && <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg shadow-lg p-6 text-white\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"bg-white bg-opacity-20 p-4 rounded-full\">\r\n                <div className=\"w-12 h-12 bg-white bg-opacity-30 rounded-full flex items-center justify-center text-lg font-bold\">\r\n                  {currentUser.avatar}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold\">{currentUser.studentName}</h2>\r\n                <p className=\"opacity-90\">{currentUser.class} \u2022 {currentUser.studentId}</p>\r\n                <div className=\"flex items-center space-x-4 mt-2\">\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <TrophyIcon className=\"h-5 w-5\" />\r\n                    <span>Rank #{currentUser.rank}</span>\r\n                  </span>\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <StarIcon className=\"h-5 w-5\" />\r\n                    <span>{currentUser.totalPoints} pts</span>\r\n                  </span>\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <FireIcon className=\"h-5 w-5\" />\r\n                    <span>{currentUser.streak} day streak</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <div className=\"text-3xl font-bold\">{currentUser.gpa}</div>\r\n              <div className=\"opacity-90\">GPA</div>\r\n              <div className=\"flex items-center justify-end mt-2\">\r\n                {getTrendIcon(currentUser.trend)}\r\n                <span className=\"ml-1 text-sm\">\r\n                  {currentUser.trend === 'up' ? 'Improving' : currentUser.trend === 'down' ? 'Declining' : 'Stable'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {currentUser.specialBadges && currentUser.specialBadges.length > 0 && <div className=\"mt-4 pt-4 border-t border-white border-opacity-20\">\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {currentUser.specialBadges.map((badge, index) => <span key={index} className=\"px-3 py-1 bg-white bg-opacity-20 rounded-full text-sm\">\r\n                    {badge}\r\n                  </span>)}\r\n              </div>\r\n            </div>}\r\n        </div>}\r\n\r\n      {/* View Controls */}\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex space-x-2\">\r\n            <button onClick={() => setViewType(\"overall\")} className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${viewType === \"overall\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`}>\r\n              Overall Rankings\r\n            </button>\r\n            <button onClick={() => setViewType(\"subject\")} className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${viewType === \"subject\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`}>\r\n              Subject Leaders\r\n            </button>\r\n            <button onClick={() => setViewType(\"achievements\")} className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${viewType === \"achievements\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`}>\r\n              Achievements\r\n            </button>\r\n          </div>\r\n          <select value={timeframe} onChange={e => setTimeframe(e.target.value)} className=\"p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n            <option value=\"week\">This Week</option>\r\n            <option value=\"month\">This Month</option>\r\n            <option value=\"semester\">This Semester</option>\r\n            <option value=\"year\">This Year</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Overall Rankings */}\r\n        {viewType === \"overall\" && <div className=\"space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Top Students</h3>\r\n            <div className=\"space-y-3\">\r\n              {topStudents.map((student, index) => <div key={student.studentId} className={`flex items-center justify-between p-4 rounded-lg ${student.rank <= 3 ? 'bg-gradient-to-r from-yellow-50 to-orange-50 border border-yellow-200' : 'bg-gray-50'}`}>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <div className=\"flex items-center justify-center w-12 h-12\">\r\n                      {getRankIcon(student.rank)}\r\n                    </div>\r\n                    <div className=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-medium\">\r\n                      {student.avatar}\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-gray-900\">{student.studentName}</h4>\r\n                      <p className=\"text-sm text-gray-600\">{student.class} \u2022 {student.studentId}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-6 text-sm\">\r\n                    <div className=\"text-center\">\r\n                      <p className=\"font-semibold text-gray-900\">{student.totalPoints}</p>\r\n                      <p className=\"text-gray-500\">Points</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"font-semibold text-gray-900\">{student.gpa}</p>\r\n                      <p className=\"text-gray-500\">GPA</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"font-semibold text-gray-900\">{student.achievements}</p>\r\n                      <p className=\"text-gray-500\">Achievements</p>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      {getTrendIcon(student.trend)}\r\n                    </div>\r\n                  </div>\r\n                </div>)}\r\n            </div>\r\n          </div>}\r\n\r\n        {/* Subject Leaders */}\r\n        {viewType === \"subject\" && <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Subject Leaderboards</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              {mockSubjectLeaderboards.map((subject, index) => <div key={index} className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n                  <div className=\"flex items-center space-x-2 mb-4\">\r\n                    <AcademicCapIcon className=\"h-6 w-6 text-blue-500\" />\r\n                    <h4 className=\"text-lg font-semibold text-gray-900\">{subject.subject}</h4>\r\n                  </div>\r\n                  <div className=\"space-y-3\">\r\n                    {subject.leaders.map((leader, leaderIndex) => <div key={leaderIndex} className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${leaderIndex === 0 ? 'bg-yellow-100 text-yellow-800' : leaderIndex === 1 ? 'bg-gray-100 text-gray-800' : 'bg-amber-100 text-amber-800'}`}>\r\n                            {leaderIndex + 1}\r\n                          </div>\r\n                          <div>\r\n                            <p className=\"font-medium text-gray-900\">{leader.name}</p>\r\n                            <p className=\"text-xs text-gray-500\">{leader.class}</p>\r\n                          </div>\r\n                        </div>\r\n                        <span className=\"font-bold text-blue-600\">{leader.score}%</span>\r\n                      </div>)}\r\n                  </div>\r\n                </div>)}\r\n            </div>\r\n          </div>}\r\n\r\n        {/* Achievements */}\r\n        {viewType === \"achievements\" && <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Available Achievements</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {mockAchievements.map(achievement => <div key={achievement.id} className={`border-2 rounded-lg p-6 ${getBadgeColor(achievement.rarity)}`}>\r\n                  <div className=\"flex items-center space-x-4 mb-4\">\r\n                    <div className=\"text-4xl\">{achievement.icon}</div>\r\n                    <div>\r\n                      <h4 className=\"text-lg font-semibold\">{achievement.title}</h4>\r\n                      <p className=\"text-sm opacity-80\">{achievement.description}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <span className=\"font-medium\">+{achievement.pointsAwarded} pts</span>\r\n                      <span className=\"capitalize font-medium\">{achievement.rarity}</span>\r\n                    </div>\r\n                    <span className=\"opacity-80\">{achievement.recipients} earned</span>\r\n                  </div>\r\n                </div>)}\r\n            </div>\r\n          </div>}\r\n      </div>\r\n    </div>;\n}\n_s(StudentLeaderboard, \"HyRyleSbMFI1DqppfJiSCGy8H/I=\");\n_c = StudentLeaderboard;\nvar _c;\n$RefreshReg$(_c, \"StudentLeaderboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AAoLE;AAxM3B,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsC;AACtC,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAGA,IAAM,kBAAkB,CAAC;AAAA,EACvB,MAAM;AAAA,EACN,aAAa;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,iBAAiB,uBAAuB,eAAe;AACzE,GAAG;AAAA,EACD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,oBAAoB,gBAAgB;AACtD,GAAG;AAAA,EACD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,oBAAoB,aAAa;AACnD,GAAG;AAAA,EACD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,aAAa;AAC/B,GAAG;AAAA,EACD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,qBAAqB,iBAAiB;AACxD,GAAG;AAAA,EACD,MAAM;AAAA,EACN,aAAa;AAAA;AAAA,EAEb,WAAW;AAAA,EACX,OAAO;AAAA,EACP,aAAa;AAAA,EACb,KAAK;AAAA,EACL,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe,CAAC,aAAa;AAAA,EAC7B,eAAe;AACjB,CAAC;AACD,IAAM,0BAA0B,CAAC;AAAA,EAC/B,SAAS;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACH,GAAG;AAAA,EACD,SAAS;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACH,GAAG;AAAA,EACD,SAAS;AAAA,EACT,SAAS,CAAC;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACH,CAAC;AACD,IAAM,mBAAmB,CAAC;AAAA,EACxB,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,aAAa;AAAA,EACb,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,YAAY;AACd,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,aAAa;AAAA,EACb,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,YAAY;AACd,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,aAAa;AAAA,EACb,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,YAAY;AACd,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,aAAa;AAAA,EACb,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,YAAY;AACd,CAAC;AACc,SAAR,qBAAsC;AAC3C,KAAG;AACH,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,SAAS;AAClD,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,UAAU;AACrD,QAAM,cAAc,gBAAgB,KAAK,aAAW,QAAQ,aAAa;AACzE,QAAM,cAAc,gBAAgB,OAAO,aAAW,CAAC,QAAQ,aAAa,EAAE,MAAM,GAAG,EAAE;AACzF,QAAM,eAAe,UAAQ;AAC3B,QAAI,SAAS;AAAG,aAAO;AACvB,QAAI,SAAS;AAAG,aAAO;AACvB,QAAI,SAAS;AAAG,aAAO;AACvB,WAAO;AAAA,EACT;AACA,QAAM,cAAc,UAAQ;AAC1B,QAAI,SAAS;AAAG,aAAO,mDAAC,sBAAW,WAAU,6BAAtB;AAAA;AAAA;AAAA;AAAA,aAAgD;AACvE,QAAI,SAAS;AAAG,aAAO,mDAAC,oBAAS,WAAU,2BAApB;AAAA;AAAA;AAAA;AAAA,aAA4C;AACnE,QAAI,SAAS;AAAG,aAAO,mDAAC,oBAAS,WAAU,4BAApB;AAAA;AAAA;AAAA;AAAA,aAA6C;AACpE,WAAO,mDAAC,UAAK,WAAU,mCAAkC;AAAA;AAAA,MAAE;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,EAClE;AACA,QAAM,eAAe,WAAS;AAC5B,QAAI,UAAU;AAAM,aAAO,mDAAC,uBAAY,WAAU,4BAAvB;AAAA;AAAA;AAAA;AAAA,aAAgD;AAC3E,QAAI,UAAU;AAAQ,aAAO,mDAAC,yBAAc,WAAU,0BAAzB;AAAA;AAAA;AAAA;AAAA,aAAgD;AAC7E,WAAO,mDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,EAClC;AACA,QAAM,gBAAgB,YAAU;AAC9B,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,mDAAC,SAAI,WAAU,aAElB;AAAA,uDAAC,SAAI,WAAU,qCACb,6DAAC,SAAI,WAAU,+BACb;AAAA,yDAAC,QAAK,IAAG,sBAAqB,WAAU,yEACtC;AAAA,2DAAC,yBAAc,WAAU,kBAAzB;AAAA;AAAA;AAAA;AAAA,eAAwC;AAAA,QAAE;AAAA,WAD5C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,QAAG,WAAU,oCAAmC,2BAAjD;AAAA;AAAA;AAAA;AAAA,eAA4D;AAAA,QAC5D,mDAAC,OAAE,WAAU,iBAAgB,mDAA7B;AAAA;AAAA;AAAA;AAAA,eAAgE;AAAA,WAFlE;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA,KAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,IAGC,eAAe,mDAAC,SAAI,WAAU,oFAC3B;AAAA,yDAAC,SAAI,WAAU,qCACb;AAAA,2DAAC,SAAI,WAAU,+BACb;AAAA,6DAAC,SAAI,WAAU,2CACb,6DAAC,SAAI,WAAU,oGACZ,sBAAY,UADf;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC,SACC;AAAA,+DAAC,QAAG,WAAU,sBAAsB,sBAAY,eAAhD;AAAA;AAAA;AAAA;AAAA,mBAA4D;AAAA,YAC5D,mDAAC,OAAE,WAAU,cAAc;AAAA,0BAAY;AAAA,cAAM;AAAA,cAAI,YAAY;AAAA,iBAA7D;AAAA;AAAA;AAAA;AAAA,mBAAuE;AAAA,YACvE,mDAAC,SAAI,WAAU,oCACb;AAAA,iEAAC,UAAK,WAAU,+BACd;AAAA,mEAAC,sBAAW,WAAU,aAAtB;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA,gBAChC,mDAAC,UAAK;AAAA;AAAA,kBAAO,YAAY;AAAA,qBAAzB;AAAA;AAAA;AAAA;AAAA,uBAA8B;AAAA,mBAFhC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,cACA,mDAAC,UAAK,WAAU,+BACd;AAAA,mEAAC,oBAAS,WAAU,aAApB;AAAA;AAAA;AAAA;AAAA,uBAA8B;AAAA,gBAC9B,mDAAC,UAAM;AAAA,8BAAY;AAAA,kBAAY;AAAA,qBAA/B;AAAA;AAAA;AAAA;AAAA,uBAAmC;AAAA,mBAFrC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,cACA,mDAAC,UAAK,WAAU,+BACd;AAAA,mEAAC,oBAAS,WAAU,aAApB;AAAA;AAAA;AAAA;AAAA,uBAA8B;AAAA,gBAC9B,mDAAC,UAAM;AAAA,8BAAY;AAAA,kBAAO;AAAA,qBAA1B;AAAA;AAAA;AAAA;AAAA,uBAAqC;AAAA,mBAFvC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA,eAwBA;AAAA,QACA,mDAAC,SAAI,WAAU,cACb;AAAA,6DAAC,SAAI,WAAU,sBAAsB,sBAAY,OAAjD;AAAA;AAAA;AAAA;AAAA,iBAAqD;AAAA,UACrD,mDAAC,SAAI,WAAU,cAAa,mBAA5B;AAAA;AAAA;AAAA;AAAA,iBAA+B;AAAA,UAC/B,mDAAC,SAAI,WAAU,sCACZ;AAAA,yBAAa,YAAY,KAAK;AAAA,YAC/B,mDAAC,UAAK,WAAU,gBACb,sBAAY,UAAU,OAAO,cAAc,YAAY,UAAU,SAAS,cAAc,YAD3F;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAnCF;AAAA;AAAA;AAAA;AAAA,aAoCA;AAAA,MACC,YAAY,iBAAiB,YAAY,cAAc,SAAS,KAAK,mDAAC,SAAI,WAAU,qDACjF,6DAAC,SAAI,WAAU,wBACZ,sBAAY,cAAc,IAAI,CAAC,OAAO,UAAU,mDAAC,UAAiB,WAAU,yDACxE,mBADuD,OAAX;AAAA;AAAA;AAAA;AAAA,aAE/C,CAAO,KAHX;AAAA;AAAA;AAAA;AAAA,aAIA,KALkE;AAAA;AAAA;AAAA;AAAA,aAMpE;AAAA,SA5CU;AAAA;AAAA;AAAA;AAAA,WA6Cd;AAAA,IAGF,mDAAC,SAAI,WAAU,qCACb;AAAA,yDAAC,SAAI,WAAU,0CACb;AAAA,2DAAC,SAAI,WAAU,kBACb;AAAA,6DAAC,YAAO,SAAS,MAAM,YAAY,SAAS,GAAG,WAAW,8DAA8D,aAAa,YAAY,2BAA2B,iDAAiD,gCAA7N;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,YAAO,SAAS,MAAM,YAAY,SAAS,GAAG,WAAW,8DAA8D,aAAa,YAAY,2BAA2B,iDAAiD,+BAA7N;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,YAAO,SAAS,MAAM,YAAY,cAAc,GAAG,WAAW,8DAA8D,aAAa,iBAAiB,2BAA2B,iDAAiD,4BAAvO;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,YAAO,OAAO,WAAW,UAAU,OAAK,aAAa,EAAE,OAAO,KAAK,GAAG,WAAU,mGAC/E;AAAA,6DAAC,YAAO,OAAM,QAAO,yBAArB;AAAA;AAAA;AAAA;AAAA,iBAA8B;AAAA,UAC9B,mDAAC,YAAO,OAAM,SAAQ,0BAAtB;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA,UAChC,mDAAC,YAAO,OAAM,YAAW,6BAAzB;AAAA;AAAA;AAAA;AAAA,iBAAsC;AAAA,UACtC,mDAAC,YAAO,OAAM,QAAO,yBAArB;AAAA;AAAA;AAAA;AAAA,iBAA8B;AAAA,aAJhC;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MAGC,aAAa,aAAa,mDAAC,SAAI,WAAU,aACtC;AAAA,2DAAC,QAAG,WAAU,uCAAsC,4BAApD;AAAA;AAAA;AAAA;AAAA,eAAgE;AAAA,QAChE,mDAAC,SAAI,WAAU,aACZ,sBAAY,IAAI,CAAC,SAAS,UAAU,mDAAC,SAA4B,WAAW,oDAAoD,QAAQ,QAAQ,IAAI,0EAA0E,gBAC3N;AAAA,6DAAC,SAAI,WAAU,+BACb;AAAA,+DAAC,SAAI,WAAU,8CACZ,sBAAY,QAAQ,IAAI,KAD3B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,SAAI,WAAU,8FACZ,kBAAQ,UADX;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,mDAAC,SACC;AAAA,iEAAC,QAAG,WAAU,+BAA+B,kBAAQ,eAArD;AAAA;AAAA;AAAA;AAAA,qBAAiE;AAAA,cACjE,mDAAC,OAAE,WAAU,yBAAyB;AAAA,wBAAQ;AAAA,gBAAM;AAAA,gBAAI,QAAQ;AAAA,mBAAhE;AAAA;AAAA;AAAA;AAAA,qBAA0E;AAAA,iBAF5E;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UACA,mDAAC,SAAI,WAAU,uCACb;AAAA,+DAAC,SAAI,WAAU,eACb;AAAA,iEAAC,OAAE,WAAU,+BAA+B,kBAAQ,eAApD;AAAA;AAAA;AAAA;AAAA,qBAAgE;AAAA,cAChE,mDAAC,OAAE,WAAU,iBAAgB,sBAA7B;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,iBAFrC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC,SAAI,WAAU,eACb;AAAA,iEAAC,OAAE,WAAU,+BAA+B,kBAAQ,OAApD;AAAA;AAAA;AAAA;AAAA,qBAAwD;AAAA,cACxD,mDAAC,OAAE,WAAU,iBAAgB,mBAA7B;AAAA;AAAA;AAAA;AAAA,qBAAgC;AAAA,iBAFlC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC,SAAI,WAAU,eACb;AAAA,iEAAC,OAAE,WAAU,+BAA+B,kBAAQ,gBAApD;AAAA;AAAA;AAAA;AAAA,qBAAiE;AAAA,cACjE,mDAAC,OAAE,WAAU,iBAAgB,4BAA7B;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAAA,iBAF3C;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC,SAAI,WAAU,+BACZ,uBAAa,QAAQ,KAAK,KAD7B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAfF;AAAA;AAAA;AAAA;AAAA,iBAgBA;AAAA,aA7B2C,QAAQ,WAAlB;AAAA;AAAA;AAAA;AAAA,eA8BnC,CAAM,KA/BV;AAAA;AAAA;AAAA;AAAA,eAgCA;AAAA,WAlCuB;AAAA;AAAA;AAAA;AAAA,aAmCzB;AAAA,MAGD,aAAa,aAAa,mDAAC,SAAI,WAAU,aACtC;AAAA,2DAAC,QAAG,WAAU,uCAAsC,oCAApD;AAAA;AAAA;AAAA;AAAA,eAAwE;AAAA,QACxE,mDAAC,SAAI,WAAU,yCACZ,kCAAwB,IAAI,CAAC,SAAS,UAAU,mDAAC,SAAgB,WAAU,kDACxE;AAAA,6DAAC,SAAI,WAAU,oCACb;AAAA,+DAAC,2BAAgB,WAAU,2BAA3B;AAAA;AAAA;AAAA;AAAA,mBAAmD;AAAA,YACnD,mDAAC,QAAG,WAAU,uCAAuC,kBAAQ,WAA7D;AAAA;AAAA;AAAA;AAAA,mBAAqE;AAAA,eAFvE;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC,SAAI,WAAU,aACZ,kBAAQ,QAAQ,IAAI,CAAC,QAAQ,gBAAgB,mDAAC,SAAsB,WAAU,qCAC3E;AAAA,+DAAC,SAAI,WAAU,+BACb;AAAA,iEAAC,SAAI,WAAW,2EAA2E,gBAAgB,IAAI,kCAAkC,gBAAgB,IAAI,8BAA8B,iCAChM,wBAAc,KADjB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,mDAAC,SACC;AAAA,mEAAC,OAAE,WAAU,6BAA6B,iBAAO,QAAjD;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,gBACtD,mDAAC,OAAE,WAAU,yBAAyB,iBAAO,SAA7C;AAAA;AAAA;AAAA;AAAA,uBAAmD;AAAA,mBAFrD;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,iBAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YACA,mDAAC,UAAK,WAAU,2BAA2B;AAAA,qBAAO;AAAA,cAAM;AAAA,iBAAxD;AAAA;AAAA;AAAA;AAAA,mBAAyD;AAAA,eAVL,aAAV;AAAA;AAAA;AAAA;AAAA,iBAW5C,CAAM,KAZV;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA,aAlBuD,OAAV;AAAA;AAAA;AAAA;AAAA,eAmB/C,CAAM,KApBV;AAAA;AAAA;AAAA;AAAA,eAqBA;AAAA,WAvBuB;AAAA;AAAA;AAAA;AAAA,aAwBzB;AAAA,MAGD,aAAa,kBAAkB,mDAAC,SAAI,WAAU,aAC3C;AAAA,2DAAC,QAAG,WAAU,uCAAsC,sCAApD;AAAA;AAAA;AAAA;AAAA,eAA0E;AAAA,QAC1E,mDAAC,SAAI,WAAU,yCACZ,2BAAiB,IAAI,iBAAe,mDAAC,SAAyB,WAAW,2BAA2B,cAAc,YAAY,MAAM,KACjI;AAAA,6DAAC,SAAI,WAAU,oCACb;AAAA,+DAAC,SAAI,WAAU,YAAY,sBAAY,QAAvC;AAAA;AAAA;AAAA;AAAA,mBAA4C;AAAA,YAC5C,mDAAC,SACC;AAAA,iEAAC,QAAG,WAAU,yBAAyB,sBAAY,SAAnD;AAAA;AAAA;AAAA;AAAA,qBAAyD;AAAA,cACzD,mDAAC,OAAE,WAAU,sBAAsB,sBAAY,eAA/C;AAAA;AAAA;AAAA;AAAA,qBAA2D;AAAA,iBAF7D;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UACA,mDAAC,SAAI,WAAU,6CACb;AAAA,+DAAC,SAAI,WAAU,+BACb;AAAA,iEAAC,UAAK,WAAU,eAAc;AAAA;AAAA,gBAAE,YAAY;AAAA,gBAAc;AAAA,mBAA1D;AAAA;AAAA;AAAA;AAAA,qBAA8D;AAAA,cAC9D,mDAAC,UAAK,WAAU,0BAA0B,sBAAY,UAAtD;AAAA;AAAA;AAAA;AAAA,qBAA6D;AAAA,iBAF/D;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,mDAAC,UAAK,WAAU,cAAc;AAAA,0BAAY;AAAA,cAAW;AAAA,iBAArD;AAAA;AAAA;AAAA;AAAA,mBAA4D;AAAA,eAL9D;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,aAd2C,YAAY,IAAtB;AAAA;AAAA;AAAA;AAAA,eAenC,CAAM,KAhBV;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,WAnB4B;AAAA;AAAA;AAAA;AAAA,aAoB9B;AAAA,SA3GJ;AAAA;AAAA;AAAA;AAAA,WA4GA;AAAA,OA5KG;AAAA;AAAA;AAAA;AAAA,SA6KL;AACJ;AACA,GAAG,oBAAoB,8BAA8B;AACrD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,oBAAoB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
