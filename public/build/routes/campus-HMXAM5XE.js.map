{
  "version": 3,
  "sources": ["../../../app/routes/campus.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\campus.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\campus.tsx\");\n  import.meta.hot.lastModified = \"1757742132210.805\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Button } from \"~/components/Button\";\nexport const meta = () => {\n  return [{\n    title: \"Campus Resources - EduHub\"\n  }, {\n    name: \"description\",\n    content: \"Find study spots, labs, and campus amenities\"\n  }];\n};\nexport default function Campus() {\n  _s();\n  const [resources] = useState([{\n    id: \"1\",\n    name: \"Science Library\",\n    type: \"study_space\",\n    location: \"Building A, Floor 3\",\n    description: \"Quiet study space with science journals and research materials\",\n    capacity: 200,\n    amenities: [\"WiFi\", \"Power Outlets\", \"Printing\", \"Silent Zone\"],\n    hours: \"24/7\",\n    rating: 4.8,\n    isAvailable: true\n  }, {\n    id: \"2\",\n    name: \"Chemistry Lab\",\n    type: \"lab\",\n    location: \"Building B, Floor 2\",\n    description: \"Fully equipped chemistry laboratory for experiments\",\n    capacity: 30,\n    amenities: [\"Fume Hoods\", \"Equipment\", \"Safety Gear\"],\n    hours: \"8 AM - 6 PM\",\n    rating: 4.5,\n    isAvailable: false\n  }, {\n    id: \"3\",\n    name: \"Student Caf\u00E9\",\n    type: \"food\",\n    location: \"Student Union, Ground Floor\",\n    description: \"Coffee, snacks, and light meals\",\n    capacity: 100,\n    amenities: [\"WiFi\", \"Outdoor Seating\", \"Group Tables\"],\n    hours: \"7 AM - 10 PM\",\n    rating: 4.2,\n    isAvailable: true\n  }, {\n    id: \"4\",\n    name: \"Computer Lab\",\n    type: \"lab\",\n    location: \"Building C, Floor 1\",\n    description: \"24/7 computer access with specialized software\",\n    capacity: 50,\n    amenities: [\"High-Speed Internet\", \"Printing\", \"Software\"],\n    hours: \"24/7\",\n    rating: 4.6,\n    isAvailable: true\n  }]);\n  const [selectedType, setSelectedType] = useState(\"all\");\n  const filteredResources = selectedType === \"all\" ? resources : resources.filter(resource => resource.type === selectedType);\n  const getTypeColor = type => {\n    const colors = {\n      study_space: \"bg-blue-100 text-blue-800\",\n      lab: \"bg-green-100 text-green-800\",\n      food: \"bg-orange-100 text-orange-800\",\n      library: \"bg-purple-100 text-purple-800\",\n      other: \"bg-gray-100 text-gray-800\"\n    };\n    return colors[type] || colors.other;\n  };\n  return <div className=\"max-w-6xl mx-auto space-y-8\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Campus Resources</h1>\r\n        <p className=\"text-xl text-gray-600\">\r\n          Find study spots, labs, and campus amenities\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex flex-wrap gap-3 justify-center\">\r\n        {[\"all\", \"study_space\", \"lab\", \"food\", \"library\"].map(type => <button key={type} onClick={() => setSelectedType(type)} className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${selectedType === type ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"}`}>\r\n            {type === \"all\" ? \"All\" : type.replace(\"_\", \" \").replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </button>)}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filteredResources.map(resource => <div key={resource.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900\">{resource.name}</h3>\r\n                <div className={`px-2 py-1 rounded-full text-xs font-medium ${getTypeColor(resource.type)}`}>\r\n                  {resource.type.replace(\"_\", \" \")}\r\n                </div>\r\n              </div>\r\n              \r\n              <p className=\"text-gray-600 text-sm mb-3\">{resource.description}</p>\r\n              \r\n              <div className=\"space-y-2 mb-4\">\r\n                <div className=\"flex items-center text-sm text-gray-500\">\r\n                  <span className=\"font-medium\">Location:</span>\r\n                  <span className=\"ml-2\">{resource.location}</span>\r\n                </div>\r\n                <div className=\"flex items-center text-sm text-gray-500\">\r\n                  <span className=\"font-medium\">Hours:</span>\r\n                  <span className=\"ml-2\">{resource.hours}</span>\r\n                </div>\r\n                <div className=\"flex items-center text-sm text-gray-500\">\r\n                  <span className=\"font-medium\">Capacity:</span>\r\n                  <span className=\"ml-2\">{resource.capacity} people</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <div className=\"text-sm font-medium text-gray-700 mb-2\">Amenities:</div>\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                  {resource.amenities.map((amenity, index) => <span key={index} className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded\">\r\n                      {amenity}\r\n                    </span>)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"flex items-center\">\r\n                    {[...Array(5)].map((_, i) => <svg key={i} className={`w-4 h-4 ${i < Math.floor(resource.rating) ? \"text-yellow-400\" : \"text-gray-300\"}`} fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                      </svg>)}\r\n                  </div>\r\n                  <span className=\"text-sm text-gray-600\">{resource.rating}</span>\r\n                </div>\r\n                <div className={`px-2 py-1 rounded-full text-xs font-medium ${resource.isAvailable ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}`}>\r\n                  {resource.isAvailable ? \"Available\" : \"Busy\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"px-6 py-3 bg-gray-50 border-t\">\r\n              <Button variant=\"primary\" className=\"w-full\">\r\n                View Details\r\n              </Button>\r\n            </div>\r\n          </div>)}\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Campus Map</h2>\r\n        <div className=\"bg-gray-200 rounded-lg h-64 flex items-center justify-center\">\r\n          <div className=\"text-center text-gray-500\">\r\n            <div className=\"text-lg font-medium\">Interactive Campus Map</div>\r\n            <div className=\"text-sm\">Click on buildings to see available resources</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(Campus, \"GDOPLB3rKCg/8z6TdD30+pRblGQ=\");\n_c = Campus;\nvar _c;\n$RefreshReg$(_c, \"Campus\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
